import collections, glob, json, os, re

raw_repo_lists = [
  ('authentication', [
    'jaredhanson/passport',
    'plataformatec/devise',
    'bnoguchi/everyauth',
  ]),
  ('data_processing', [
    'simple-statistics/simple-statistics',
    'data-forge/data-forge-ts',
    'uhho/density-clustering',
    'pandas-dev/pandas',
    'numpy/numpy',
  ]),
  ('databases', [
      'google/leveldb',
      'mongodb/mongo',
      'neo4j/neo4j',
      'antirez/redis',
      'rethinkdb/rethinkdb',
      'pouchdb/pouchdb',
      'thinkaurelius/titan',
  ]),
  ('deep_learning', [
      'tensorflow/tensorflow',
      'fchollet/keras',
      'BVLC/caffe',
      'dmlc/mxnet',
      'Theano/Theano',
      'Microsoft/CNTK',
      'deeplearning4j/deeplearning4j',
      'baidu/paddle',
      'pytorch/pytorch',
      'pfnet/chainer',
      'torch/torch7',
      'NVIDIA/DIGITS',
      'tflearn/tflearn',
      'caffe2/caffe2',
      'davisking/dlib',
  ]),
  ('excel_parsing', [
    # https://bitbucket.org/openpyxl/openpyxl
    'jmcnamara/XlsxWriter',
    'python-excel/xlrd',
    'python-excel/xlwt',
    'python-excel/xlutils',
    'kz26/PyExcelerate',
    'sheetjs/js-xlsx',
    'tealeg/xlsx',
    '360EntSecGroup-Skylar/excelize',
  ]),
  ('front_end_frameworks', [
      'angular/angular',
      'angular/angular.js',
      'emberjs/ember.js',
      'facebook/flux',
      'facebook/react',
      'jashkenas/backbone',
      'jquery/jquery',
      'LeadDyno/intercooler-js',
      'lhorie/mithril.js',
      'mui-org/material-ui',
      'Polymer/polymer',
      'reactjs/redux',
      'riot/riot',
      'stimulusjs/stimulus',
      'vuejs/vue',
      'aurelia/framework'
  ]),
  ('filesystem_monitor', [
      'fsnotify/fsnotify',
      'radovskyb/watcher',
      'howeyc/fsnotify',
      'gorakhargosh/watchdog',
      'ljmccarthy/fsmonitor',
      'guard/guard',
      'seb-m/pyinotify',
      'rvoicilas/inotify-tools',
      'jbd/treewatcher',
      'pke/file.monitor',
  ]),
  ('git_guis', [
      'pieter/gitx',
      'rowanj/gitx',
      'brotherbard/gitx',
      'laullon/gitx',
      'beheadedmyway/gity',
      'andreberg/gitx'
  ]),
  ('graphing', [
    'd3/d3',
    'chartjs/Chart.js',
    'flot/flot',
  ]),
  ('hidden_markov_models', [
    'hmmlearn/hmmlearn',
    'jmschrei/pomegranate',
    'Sumolari/hmm',
    'cnatale/JSProbability',
    'miguelmota/hidden-markov-model',
    'wiseman/clj-viterbi',
    'wangkuiyi/hmm',
    'nyxtom/viterbi',
    'johnmcconnell/HMM',
    'unixpickle/hmm',
    'mazubieta/go-hmm',
    'mikeizbicki/hmm',
    'mnacamura/learning-hmm',
    'AhmedHani/Hidden-Markov-Model',
    'haifengl/smile',
  ]),
  ('html_parsing', [
      'paquettg/php-html-parser',
      'lexborisov/myhtml',
      'ericchiang/pup',
      'developit/htmlParser',
      'posthtml/posthtml-parser',
      'philss/floki',
      'jquery/jquery/issues/2941',
      'ressio/pharse',
      'cheeriojs/cheerio',
      'google/gumbo-parser',
  ]),
  ('image_processing', [
    'opencv/opencv',
    'danforthcenter/plantcv',
    'scikit-image/scikit-image',
    'matplotlib/matplotlib',
    'scipy/scipy',
    'numpy/numpy',
    'python-pillow/Pillow',
    'whatupdave/pil',
    'uploadcare/pillow-simd',
  ]),
  ('javascript_stemming', [
    'MarkKahn/stem',
    'kristopolous/Porter-Stemmer',
    'kristopolous/Porter2-Stemmer',
    'jedp/porter-stemmer',
    'words/stemmer',
    'fortnightlabs/snowball-js',
    'shibukawa/snowball-stemmer.jsx',
    'mazko/jssnowball',
    'hthetiot/node-snowball',
  ]),
  ('javascript_strings', [
    'panzerdp/voca',
    'epeli/underscore.string',
    'andrewplummer/Sugar',
    'jashkenas/underscore',
    'lodash/lodash',
    'jprichardson/string.js',
  ]),
  ('javascript_templates', [
      'wycats/handlebars.js',
      'mde/ejs',
      'janl/mustache.js',
      'olado/doT',
      'pugjs/pug',
      'baryshev/ect',
      'nolimits4web/template7',
  ]),
  ('javascript_testing', [
      'jsdom/jsdom',
      'SeleniumHQ/selenium',
      'appium/appium',
      'angular/protractor',
      'GoogleChrome/puppeteer',
      'segmentio/nightmare',
      'casperjs/casperjs',
      'Codeception/CodeceptJS',
      'karma-runner/karma',
      'chaijs/chai',
      'unexpectedjs/unexpected',
      'sinonjs/sinon',
      'testdouble/testdouble.js',
      'cucumber/cucumber-js',
      'mochajs/mocha',
      'facebook/jest',
      'jasmine/jasmine',
      'avajs/ava',
      'substack/tape',
  ]),
  ('language_translation', [
    'ssut/py-googletrans',
    'jjangsangy/py-translate',
    'terryyin/translate-python',
    # https://cloud.google.com/translate/docs/
  ]),
  ('latex', [
    'JelteF/PyLaTeX',
    'mbr/latex',
    'mathjax/mathjax',
    'Khan/KaTeX',
    'manuels/texlive.js',
    'opencollab/jlatexmath',
    'jonasseglare/bluebell-latex',
    'Daniel-Diaz/HaTeX',
    'gpoore/pythontex',
    'goldsborough/latexpp',
    'apourchet/go-latex',
    'rwestlund/gotex',
  ]),
  ('node_sql', [
      'dresende/node-orm2',
      'tgriesser/bookshelf',
      'felixge/node-mysql',
      '1602/jugglingdb',
      'brianc/node-postgres',
      'tgriesser/knex',
      'balderdashy/waterline',
      'sequelize/sequelize',
      'devinivy/dogwater'
  ]),
  ('pdf_table_extraction', [
    'tabulapdf/tabula',
    'okfn/pdftables',
  ]),
  ('programming_languages', [
      'Microsoft/dotnet',
      'apple/swift',
      'rust-lang/rust',
      'golang/go',
      'jashkenas/coffeescript',
      'ruby/ruby',
      'php/php-src',
      'JuliaLang/julia',
      'elixir-lang/elixir',
      'scala/scala',
      'clojure/clojure',
      'dotnet/roslyn',
      'erlang/otp',
      'JetBrains/kotlin',
      'nim-lang/Nim',
      'elm-lang/elm-compiler',
      'purescript/purescript',
      'timburks/nu',
      'Frege/frege',
      'gkz/LiveScript',
      'stevedekorte/io',
      'groovy/groovy-core',
      'racket/racket',
      'HaxeFoundation/haxe',
      'D-Programming-Language/dmd',
      'fsharp/fsharp',
      'eholk/harlan',
      'red/red',
      'amber-smalltalk/amber',
      'ocaml/ocaml',
      'dart-lang/sdk',
      'dylan-lang/opendylan',
      'chapel-lang/chapel',
  ]),
  ('python_rpc', [
      'shibukawa/curl_as_dsl',
      'irmen/Pyro4',
      'tomerfiliba/rpyc',
      'arskom/spyne',
      'python-symmetric-jsonrpc',
      'dwb/jsonrpc2-zeromq-python',
      'kiorky/SOAPpy',
      'wamp-proto/wamp-proto',
      'geoffwatts/zmqrpc',
      '0rpc/zerorpc-python',
  ]),
  ('python_unit_testing', [
      'rlisagor/freshen',
      'gabrielfalcao/sure',
      'gabrielfalcao/lettuce',
      'behave/behave',
      'nose-devs/nose2',
      'nose-devs/nose',
      'pytest-dev/pytest'
  ]),
  ('redis_clients', [
      "antirez/redis-doc",
      "mikeheier/Redis-AS3",
      "crypt1d/redi.sh",
      "redis/hiredis",
      "toymachine/libredis",
      "ctstone/csredis",
      "mhowlett/Nhiredis",
      "migueldeicaza/redis-sharp",
      "andrew-bn/RedisBoost",
      "ServiceStack/ServiceStack.Redis",
      "StackExchange/StackExchange.Redis",
      "mrpi/redis-cplusplus-client",
      "shawn246/redis_client",
      "cylix/cpp_redis",
      "uglide/qredisclient",
      "zhengshuxin/acl",
      "luca3m/redis3m",
      "nekipelov/redisclient",
      "hmartiro/redox",
      "Levhav/SimpleRedisClient",
      "0xsky/xredis",
      "ptaoussanis/carmine",
      "vseloved/cl-redis",
      "stefanwille/crystal-redis",
      "adilbaig/Tiny-Redis",
      "dartist/redis_client",
      "himulawang/i_redis",
      "ra1u/redis-dart",
      "danieleteti/delphiredisclient",
      "artemeff/exredis",
      "whatyouhide/redix",
      "wooga/eredis",
      "adrienmo/eredis_cluster",
      "japerk/erldis",
      "jeremyong/sharded_eredis",
      "bakkdoor/redis.fy",
      "emacstheviking/gnuprolog-redisclient",
      "alphazero/Go-Redis",
      "go-redis/redis",
      "simonz05/godis",
      "keimoon/gore",
      "xuyu/goredis",
      "gosexy/redis",
      "mediocregopher/radix.v2",
      "garyburd/redigo",
      "hoisie/redis",
      "shipwire/redis",
      "tideland/golib/tree/master/redis",
      "tideland/golib",
      "informatikr/hedis",
      "vangberg/iodis",
      "xetorthio/jedis",
      "alphazero/jredis",
      "mp911de/lettuce",
      "vert-x/mod-redis",
      "spullara/redis-protocol",
      "caoxinyu/RedisClient",
      "mrniko/redisson",
      "e-mzungu/rjc",
      "h0x91b/fast-redis-cluster",
      "h0x91b/redis-fast-driver",
      "jkaye2012/redis.jl",
      "Zeroloop/lasso-redis",
      "daurnimator/lredis",
      "agladysh/lua-hiredis",
      "nrk/redis-lua",
      "markuman/go-redis",
      "matsumoto-r/mruby-redis",
      "nim-lang/Nim",
      "luin/ioredis",
      "NodeRedis/node_redis",
      "fictorial/redis-node-client",
      "rootslab/spade",
      "mjackson/then-redis",
      "thunks/thunk-redis",
      "lp/ObjCHiredis",
      "dizzus/RedisKit",
      "0xffea/ocaml-redis",
      "ik5/redis_client.fpc",
      "wjackson/AnyEvent-Hiredis",
      "miyagawa/AnyEvent-Redis",
      "iph0/AnyEvent-Redis-RipeRedis",
      "marcusramberg/mojo-redis",
      "PerlRedis/perl-redis",
      "smsonline/redis-cluster-perl",
      "shogo82148/Redis-Fast",
      "trinitum/RedisDB",
      "amphp/redis",
      "cheprasov/php-redis-client",
      "colinmollenhour/credis",
      "ziogas/PHP-Redis-implementation",
      "jamescauwelier/PSRedis",
      "phpredis/phpredis",
      "nrk/predis",
      "swoole/redis-async",
      "jdp/redisent",
      "Shumkov/Rediska",
      "yampee/Redis",
      "lp/puredis",
      "aio-libs/aioredis",
      "jonathanslenders/asyncio-redis",
      "evilkost/brukva",
      "aallamaa/desir",
      "brainix/pottery",
      "pepijndevos/pypredis",
      "schlitzered/pyredis",
      "andymccurdy/redis-py",
      "khamin/redisca2",
      "fiorix/txredisapi",
      "bwlewis/rredis",
      "eu90h/rackdis",
      "stchang/redis",
      "rebolek/prot-redis",
      "mloughran/em-hiredis",
      "madsimian/em-redis",
      "amakawa/redic",
      "redis/redis-rb",
      "AsoSunag/redis-client",
      "mitsuhiko/redis-rs",
      "mneumann/rust-redis",
      "chrisdinn/brando",
      "twitter/finagle",
      "andreyk0/redis-client-scala-netty",
      "etaty/rediscala",
      "chiradip/RedisClient",
      "debasishg/scala-redis",
      "acrosa/scala-redis",
      "top10/scala-redis-client",
      "Livestream/scredis",
      "pk11/sedis",
      "carld/redis-client.egg",
      "czechboy0/Redbird",
      "Farhaddc/Swidis",
      "ronp001/SwiftRedis",
      "rabc/ZRedis",
      "gahr/retcl",
      "antirez/redis",
      "hishamco/vRedis",
      "carlosabalde/libvmod-redis",
      "resque/resque",
      "nvie/rq",
      "ask/celery",
      "paulasmuth/fnordmetric",
      "soveran/ohm",
      "celery/kombu",
      "dahlia/sider",
      "hollodotme/readis",
      "nateware/redis-objects",
      "iamteem/redisco",
      "sripathikrishnan/redis-rdb-tools",
      "pconstr/rdb-parser",
      "pconstr/redis-sync",
      "soveran/ost",
      "antirez/redis-sampler",
      "paulasmuth/recommendify",
      "redis-store/redis-store",
      "steelThread/redmon",
      "FetLife/rollout",
      "nicolasff/webdis",
      "seatgeek/soulmate",
      "ryanlecompte/redis_failover",
      "delano/redis-dump",
      "sneakybeaky/mod_redis",
      "agoragames/leaderboard",
      "nrk/redis-rdb",
      "slact/lua-ohm",
      "chrisboulton/php-resque",
      "ErikDubbelboer/phpRedisAdmin",
      "stephpy/timeline-bundle",
      "lsbardel/python-stdnet",
      "bbangert/retools",
      "pconstr/recurrent",
      "agoragames/amico",
      "qi4j/qi4j-sdk",
      "spring-projects/spring-data-redis",
      "sasanrose/phpredmin",
      "bradvoth/redis-tcl",
      "uglide/RedisDesktopManager",
      "fastogt/fastoredis",
      "poying/redis-mount",
      "josiahcarlson/rpqueue",
      "josiahcarlson/rom",
      "adriano-di-giovanni/node-redis-keychain",
      "eugef/phpRedExpert",
      "hibernate/hibernate-ogm",
      "binarydud/pyres",
      "flygoast/Redis-RdbParser",
      "percolate/redset",
      "Redsmin/redsmin",
      "stephenmcd/hot-redis",
      "FGRibreau/redistree",
      "caio/Redis-NaiveBayes",
      "wingify/agentredrabbit",
      "redtrine/redtrine",
      "Redsmin/redis-lua-unit",
      "FGRibreau/node-redis-info",
      "FGRibreau/redis-tool",
      "cinience/RedisStudio",
      "no13bus/redispapa",
      "HangfireIO/Hangfire",
      "coleifer/huey",
      "coleifer/walrus",
      "jacket-code/redisPlatform",
      "ienaga/RedisPlugin",
      "maxbrieiev/promise-redis",
      "hedisdb/hedis",
      "pkulchenko/ZeroBranePackage",
      "antirez/redis-io"
  ]),
  ('python_web_servers', [
      'benoitc/gunicorn',
      'Pylons/waitress',
      'cherrypy/cherrypy',
      'unbit/uwsgi',
      'django/daphne',
      'encode/uvicorn',
      'pgjones/quart',
      'encode/starlette',
  ]),
  ('terminal_ui', [
      'gizak/termui',
      'mabe02/lanterna',
      'jroimartin/gocui',
      'VladimirMarkelov/clui',
      'cznic/wm',
      'marcusolsson/tui-go',
      'JoelOtter/termloop',
      'rivo/tview',
      'Shopify/cli-ui',
      'urwid/urwid',
      'jonathanslenders/python-prompt-toolkit/',
      'gdamore/tcell',
      'nsf/termbox',
      'chjj/blessed',
      'cronvel/terminal-kit',
  ]),
  ('vue_state', [
      'visionmedia/superagent',
      'vuejs/vuex',
      'reactjs/redux',
      'egoist/revue',
      'vuejs/vue-resource',
      'facebook/flux'
  ]),
  ('web_crawlers', [
      'scrapy/scrapy',
      'holgerd77/django-dynamic-scraper',
      'rolando/scrapy-redis',
      'istresearch/scrapy-cluster',
      'gnemoug/distribute_crawler',
      'binux/pyspider',
      'chineking/cola',
      'matiasb/demiurge',
      'scrapy/scrapely',
      'soimort/you-get',
      'hickford/MechanicalSoup',
      'scrapinghub/portia',
      'jmg/crawley',
      'jmcarp/robobrowser',
      'manning23/MSpider',
      'douban/brownant',
      'xianhu/PSpider',
      'gaojiuli/gain',
      'iogf/sukhoi',
      'rivermont/spidy',
      'codelucas/newspaper',
      'ViDA-NYU/ache',
      'yahoo/anthelion',
      'yasserg/crawler4j',
      'xtuhcy/gecco',
      'CrawlScript/WebCollector',
      'code4craft/webmagic',
      'internetarchive/heritrix3',
      'zhegexiaohuozi/SeimiCrawler',
      'USCDataScience/sparkler',
      'pkwenda/webBee',
      'lei-zhu/SimpleCrawler',
      'zlzforever/DotnetSpider',
      'sjdirect/abot',
      'ferventdesert/Hawk',
      'JonCanning/SkyScraper',
      'ruipgil/scraperjs',
      'IonicaBizau/scrape-it',
      'cgiffard/node-simplecrawler',
      'bda-research/node-crawler',
      'antivanov/js-crawler',
      'zhuyingda/webster',
      'lapwinglabs/x-ray',
      'rchipka/node-osmosis',
      'martinsbalodis/web-scraper-chrome-extension',
      'brendonboshell/supercrawler',
      'yujiosaka/headless-chrome-crawler',
      'FriendsOfPHP/Goutte',
      'dweidner/laravel-goutte',
      'symfony/dom-crawler',
      'hightman/pspider',
      'mvdbos/php-spider',
      'spatie/crawler',
      'gigablast/open-source-search-engine',
      'xroche/httrack',
      'sparklemotion/nokogiri',
      'propublica/upton',
      'felipecsl/wombat',
      'joenorton/rubyretriever',
      'postmodern/spidr',
      'stewartmckee/cobweb',
      'sparklemotion/mechanize',
      'hadley/rvest',
      'matteoredaelli/ebot',
      'miyagawa/web-scraper',
      'henrylee2cn/pholcus',
      'PuerkitoBio/gocrawl',
      'PuerkitoBio/fetchbot',
      'hu17889/go_spider',
      'shiyanhui/dht',
      'wcong/ants-go',
      'yhat/scrape',
      'wspl/creeper',
      'asciimoo/colly',
      'bplawler/crawler',
      'gaocegege/scrala',
      'reggoodwin/ferrit',
  ]),
  ('web_frameworks', [
      'aspnet/AspNetCore',
      'aspnet/Blazor',
      'balderdashy/sails',
      'cakephp/cakephp',
      'derbyjs/derby',
      'django/django',
      'go-martini/martini',
      'hanami/hanami',
      'hapijs/hapi',
      'keithwhor/nodal',
      'koajs/koa',
      'kraih/mojo',
      'laravel/laravel',
      'linnovate/mean',
      'MasoniteFramework/masonite',
      'meteor/meteor',
      'NancyFx/Nancy',
      'lukeed/polka',
      'nestjs/nest',
      'eggjs/egg',
      'mitsuhiko/flask',
      'ninjaframework/ninja',
      'nodejs/node',
      'padrino/padrino-framework',
      'pakyow/pakyow',
      'perl-catalyst/catalyst-runtime',
      'phoenixframework/phoenix',
      'rails/rails',
      'revel/revel',
      'senchalabs/connect',
      'strongloop/express',
      'symfony/symfony',
      'tornadoweb/tornado',
      'urfave/negroni',
      'vapor/vapor',
      'web2py/web2py',
  ]),
  ('wysiwyg', [
      'froala/wysiwyg-editor',
  ]),
  ('xml_libs', [
      'martinblech/xmltodict',
      'nfarina/xmldoc',
      'FasterXML/aalto-xml',
      'zeux/pugixml',
      'snoyberg/xml',
      'omegahat/XML',
      'KirillOsenkov/XmlParser',
      'sabre-io/xml',
      'tafia/quick-xml',
      'lxml/lxml',
  ]),
]


for path in glob.glob('lists/*.txt'):
  print 'loading path:', path
  with open(path) as f:
    text = f.read()
  lines = text.strip().splitlines()
  lines = [line.strip() for line in lines if line.strip() and not line.strip().startswith('//')]
  clean_lines = []
  for line in lines:
    if re.match(r'^[\-_0-9A-Za-z\.]+/[\-_0-9A-Za-z\.]+$', line):
      clean_lines.append(line)
    else:
      print 'bad repo name:', line

  list_name = os.path.basename(path).rsplit('.', 1)[0]
  raw_repo_lists.append((list_name, clean_lines))

repo_lists = collections.OrderedDict()
for name, repo_list in sorted(raw_repo_lists, key=lambda t: t[0]):
  repo_lists[name] = repo_list

if __name__ == '__main__':
  print repo_lists['web_frameworks']
